/** * Created by Sam-Mac on 4/10/17. */const express = require('express');const router = express.Router();var passport = require('passport');const jwt = require('jsonwebtoken');const User = require('../models/user');const config = require('../config/database');router.post('/register', (req,res,next) => {    console.log("from server");    let newUser = new User({        name: req.body.name,        email: req.body.email,        username: req.body.username,        password: req.body.password    });    User.addUser(newUser,(err,user) => {        if(err){           res.json({success: false, msg: 'Failed to register user'});        }else{            res.json({success: true, msg: 'User registered'});        }    });});router.get('/dashboard/:id',(request,response,next) => {    console.log("dashboard reached to express server");    console.log(request.params.id);    // Get the user details for the dashboard to display the information    User.getInformationForDashboard(request.params.id,(err,data)=>{        if(err){            response.json({success: false, msg: 'No information to populate'});        }else{            console.log("*************************");            console.log(data);            console.log("*************************");            var responseJsonFile = []            data.forEach(e => responseJsonFile.push({                name: e.name,                email: e.email            }));            console.log(responseJsonFile);            response.json({message: responseJsonFile});        }    });});router.post('/dashboard',(request,response,next)=>{    // To hold the store the information of newly added element to database    console.log("dashboard post request has come");    console.log(request.body);    User.addFormInformation(request.body[0],request.body[1].id,(err)=>{        if(err){            console.log("Error in added form information message in users.js");        }else{            console.log("Success fully added the information in users.js");            response.json({success: true,msg: 'Successfully added'});        }    });});router.post('/authenticate', (request,response,next) => {    const username = request.body.username;    const password = request.body.password;    User.getUserByUserName(username,(err,user) => {        if(err){            throw err;        }        if(!user){            return response.json({success: false, msg: 'User not found'});        }        User.comparePassword(password, user.password, (err,ismatch) => {            if(err){                throw err;            }            if(ismatch){                const token = jwt.sign(user,config.secret, {                    expiresIn: 604800 // 1 week,                });                response.json({                    success: true,                    token: 'JWT '+token,                    user : {                        id: user.id,                        name: user.username,                        email: user.email                    }                });            }else{                response.json({success: false, msg: 'wrong password'})            }        });    });});router.get('/profile', passport.authenticate('jwt',{session:false}),(request,response,next) => {    //will send the json format of the object which is inside the parameter    console.log(request.user);    response.json({user: request.user});});module.exports = router;